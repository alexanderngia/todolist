{"version":3,"sources":["components/taskform.js","components/search.js","components/sort.js","components/control.js","components/taskitem.js","components/tasklist.js","App.js","reportWebVitals.js","index.js"],"names":["Taskform","props","onChange","event","target","name","value","setState","onSubmit","preventDefault","state","onClear","addTask","status","id","this","task","nextProps","className","type","placeholder","onClick","Component","Search","onSearch","keyword","Sort","sortBy","sortValue","onSort","sort","by","role","href","Control","handleSubmit","Taskitem","onUpdateStatus","onDelete","onUpdate","index","Tasklist","onFilter","filterName","filterStatus","elmTasks","tasks","map","App","isDisplayForm","taskEditing","data","generateID","push","findIndex","localStorage","setItem","JSON","stringify","result","forEach","splice","console","log","parseInt","filter","toLowerCase","getItem","parse","Math","floor","random","toString","substring","s4","indexOf","a","b","elmTaskForm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.934cb0b2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class Taskform extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: \"\",\n      name: \"\",\n      status: false,\n    };\n  }\n  componentWillMount() {\n    if (this.props.task) {\n      this.setState({\n        id: this.props.task.id,\n        name: this.props.task.name,\n        status: this.props.task.status,\n      });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps && nextProps.task) {\n      this.setState({\n        id: nextProps.task.id,\n        name: nextProps.task.name,\n        status: nextProps.task.status,\n      });\n    } else if (!nextProps.task) {\n      this.setState({\n        id: \"\",\n        name: \"\",\n        status: false,\n      });\n    }\n  }\n\n  onChange = (event) => {\n    var target = event.target;\n    var name = target.name;\n    var value = target.value;\n    if (name === \"status\") {\n      value = target.value === \"true\" ? true : false;\n    }\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  onSubmit = (event) => {\n    event.preventDefault();\n    this.props.onSubmit(this.state);\n    // cancel & closeform\n    this.onClear();\n    this.props.addTask(this.state);\n  };\n\n  onClear = () => {\n    this.setState({\n      name: \"\",\n      status: false,\n    });\n    this.props.addTask(this.state);\n  };\n\n  render() {\n    var { id } = this.state;\n    return (\n      <form onSubmit={this.onSubmit}>\n        <legend>{id !== \"\" ? \"Update task\" : \"Add Task\"}</legend>\n        <div className=\"form-group\">\n          <label>Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Input field\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.onChange}\n          />\n        </div>\n        <div className=\"form-group mt-3\">\n          <label>Status</label>\n          <select\n            name=\"status\"\n            className=\"form-control\"\n            value={this.state.status}\n            onChange={this.onChange}\n          >\n            <option value={true}>Active</option>\n            <option value={false}>Hide</option>\n          </select>\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary mt-3\">\n          Add\n        </button>\n        &nbsp;\n        <button\n          type=\"button\"\n          className=\"btn btn-danger mt-3\"\n          onClick={this.onClear}\n        >\n          Cancel\n        </button>\n      </form>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      keyword: \"\",\n    };\n  }\n\n  onChange = (event) => {\n    var target = event.target;\n    var name = target.name;\n    var value = target.value;\n    this.setState({\n      [name]: value,\n    });\n  };\n  onSearch = () => {\n    this.props.onSearch(this.state.keyword);\n  };\n  render() {\n    var { keyword } = this.state;\n    return (\n      <div className=\"mt-3 flex-col\">\n        <input\n          name=\"keyword\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Add Keyword\"\n          aria-label=\"Add Keyword\"\n          aria-describedby=\"button-addon2\"\n          value={keyword}\n          onChange={this.onChange}\n        />\n        <button\n          className=\"btn btn-outline-secondary\"\n          type=\"button\"\n          id=\"button-addon2\"\n          onClick={this.onSearch}\n        >\n          <i className=\"fas fa-search \"></i>Search\n        </button>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class Sort extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sort: {\n        by: \"\",\n        value: 1,\n      },\n    };\n  }\n  onClick = (sortBy, sortValue) => {\n    this.props.onSort(sortBy, sortValue);\n  };\n\n  render() {\n    return (\n      <div className=\"mt-3 flex-col\">\n        <div\n          className=\"btn-group\"\n          role=\"group\"\n          aria-label=\"Button group with nested dropdown\"\n        >\n          <div className=\"btn-group\" role=\"group\">\n            <button\n              id=\"btnGroupDrop1\"\n              type=\"button\"\n              className=\"btn btn-primary dropdown-toggle\"\n              data-bs-toggle=\"dropdown\"\n              aria-expanded=\"false\"\n            >\n              Sort\n            </button>\n            <ul className=\"dropdown-menu\" aria-labelledby=\"btnGroupDrop1\">\n              <li onClick={() => this.onClick(\"name\", 1)}>\n                <a className=\"dropdown-item\" href=\"/#\">\n                  A - Z\n                </a>\n              </li>\n              <li onClick={() => this.onClick(\"name\", -1)}>\n                <a className=\"dropdown-item\" href=\"/#\">\n                  Z - A\n                </a>\n              </li>\n              <li onClick={() => this.onClick(\"status\", 1)}>\n                <a className=\"dropdown-item\" href=\"/#\">\n                  Active\n                </a>\n              </li>\n              <li onClick={() => this.onClick(\"status\", -1)}>\n                <a className=\"dropdown-item\" href=\"/#\">\n                  Hide\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Search from \"./search\";\nimport Sort from \"./sort\";\nexport default class Control extends Component {\n  handleSubmit = (event) => {\n    event.preventDefault();\n  };\n  render() {\n    return (\n      <div className=\"input-group row flex\">\n        {/* Search */}\n        <Search onSearch={this.props.onSearch} />\n        {/* Sort */}\n        <Sort\n          onSort={this.props.onSort}\n          sortBy={this.props.sortBy}\n          sortValue={this.props.sortValue}\n          handleSubmit={this.handleSubmit}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class Taskitem extends Component {\n  onUpdateStatus = () => {\n    this.props.onUpdateStatus(this.props.task.id);\n  };\n  onDelete = () => {\n    this.props.onDelete(this.props.task.id);\n  };\n  onUpdate = () => {\n    this.props.onUpdate(this.props.task.id);\n  };\n  render() {\n    var { task, index } = this.props;\n\n    return (\n      <tr>\n        <td className=\"text-center\">{index}</td>\n        <td className=\"text-center\">{task.name}</td>\n        <td\n          className={task.status ? \"label-active\" : \"label-hide\"}\n          onClick={this.onUpdateStatus}\n        >\n          {task.status ? \"Active\" : \"Hide\"}\n        </td>\n        <td className=\"flex\">\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            onClick={this.onUpdate}\n          >\n            Edit\n          </button>\n          &nbsp;\n          <button\n            type=\"reset\"\n            className=\"btn btn-danger\"\n            onClick={this.onDelete}\n          >\n            Delete\n          </button>\n        </td>\n      </tr>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Taskitem from \"./taskitem\";\n\nexport default class Tasklist extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filterName: \"\",\n      filterStatus: -1, // all -1, active = 1, hide = 0\n    };\n  }\n  onChange = (event) => {\n    var target = event.target;\n    var name = target.name;\n    var value = target.value;\n    this.props.onFilter(\n      name === \"filterName\" ? value : this.state.filterName,\n      name === \"filterStatus\" ? value : this.state.filterStatus\n    );\n    this.setState({\n      [name]: value,\n    });\n  };\n  render() {\n    var { filterName, filterStatus } = this.state;\n    var { tasks } = this.props;\n    var elmTasks = tasks.map((tasks, index) => {\n      return (\n        <Taskitem\n          key={tasks.id}\n          index={index}\n          task={tasks}\n          onUpdateStatus={this.props.onUpdateStatus}\n          onDelete={this.props.onDelete}\n          onUpdate={this.props.onUpdate}\n        />\n      );\n    });\n    return (\n      <table className=\"table table-hover\">\n        <thead>\n          <tr>\n            <th className=\"text-center\">STT</th>\n            <th className=\"text-center\">Name</th>\n            <th className=\"text-center\">Status</th>\n            <th className=\"text-center\">Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td></td>\n            <td>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Input field\"\n                name=\"filterName\"\n                value={filterName}\n                onChange={this.onChange}\n              />\n            </td>\n            <td>\n              <select\n                name=\"addStatus\"\n                className=\"form-control\"\n                name=\"filterStatus\"\n                value={filterStatus}\n                onChange={this.onChange}\n              >\n                <option value={-1}>All</option>\n                <option value={1}>Active</option>\n                <option value={0}>Hide</option>\n              </select>\n            </td>\n            <td></td>\n          </tr>\n          {elmTasks}\n        </tbody>\n      </table>\n    );\n  }\n}\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport Taskform from \"./components/taskform\";\nimport Control from \"./components/control\";\nimport Tasklist from \"./components/tasklist\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: [], //id: unique, name, status\n      isDisplayForm: false,\n      taskEditing: null,\n      filter: {\n        name: \"\",\n        status: -1,\n      },\n      keyword: \"\",\n      sortBy: \"name\",\n      sortValue: 1,\n    };\n  }\n  componentDidMount() {\n    if (localStorage && localStorage.getItem(\"tasks\")) {\n      var tasks = JSON.parse(localStorage.getItem(\"tasks\"));\n      this.setState({\n        tasks: tasks,\n      });\n    }\n  }\n\n  // Generate ID\n  s4() {\n    return Math.floor(1 * Math.random() * 0x10000)\n      .toString(16)\n      .substring(1);\n  }\n\n  generateID() {\n    return (\n      this.s4() +\n      this.s4() +\n      \"-\" +\n      this.s4() +\n      \"-\" +\n      this.s4() +\n      this.s4() +\n      \"-\" +\n      this.s4()\n    );\n  }\n  /// Generate ID\n\n  addTask = () => {\n    if (this.state.isDisplayForm && this.state.taskEditing !== null) {\n      this.setState({\n        isDisplayForm: true,\n        taskEditing: null,\n      });\n    } else {\n      this.setState({\n        isDisplayForm: !this.state.isDisplayForm,\n        taskEditing: null,\n      });\n    }\n  };\n\n  onSubmit = (data) => {\n    var { tasks } = this.state;\n    if (data.id === \"\") {\n      // Tasks\n      data.id = this.generateID();\n      tasks.push(data);\n    } else {\n      // Editing\n      var index = this.findIndex(data.id);\n      tasks[index] = data;\n    }\n    this.setState({\n      tasks: tasks,\n      taskEditing: null,\n    });\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  };\n  onUpdateStatus = (id) => {\n    var { tasks } = this.state;\n    var index = this.findIndex(id);\n    if (index !== -1) {\n      tasks[index].status = !tasks[index].status;\n      this.setState({\n        tasks: tasks,\n      });\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    }\n  };\n\n  findIndex = (id) => {\n    var { tasks } = this.state;\n    var result = -1;\n    tasks.forEach((task, index) => {\n      if (task.id === id) {\n        result = index;\n      }\n    });\n    return result;\n  };\n\n  onDelete = (id) => {\n    var { tasks } = this.state;\n    var index = this.findIndex(id);\n    if (index !== -1) {\n      tasks.splice(index, 1);\n      this.setState({\n        tasks: tasks,\n      });\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    }\n    this.setState({\n      isDisplayForm: false,\n    });\n  };\n  onUpdate = (id) => {\n    var { tasks } = this.state;\n    var index = this.findIndex(id);\n    var taskEditing = tasks[index];\n    console.log(taskEditing);\n    this.setState({\n      taskEditing: taskEditing,\n      isDisplayForm: true,\n    });\n  };\n  onFilter = (filterName, filterStatus) => {\n    filterStatus = parseInt(filterStatus, 10);\n    this.setState({\n      filter: {\n        name: filterName.toLowerCase(),\n        status: filterStatus,\n      },\n    });\n  };\n\n  onSearch = (keyword) => {\n    this.setState({\n      keyword: keyword,\n    });\n  };\n  onSort = (sortBy, sortValue) => {\n    this.setState({\n      sortBy: sortBy,\n      sortValue: sortValue,\n    });\n  };\n  render() {\n    var {\n      tasks,\n      isDisplayForm,\n      taskEditing,\n      filter,\n      keyword,\n      sortBy,\n      sortValue,\n    } = this.state;\n    if (filter) {\n      if (filter.name) {\n        tasks = tasks.filter((task) => {\n          return task.name.toLowerCase().indexOf(filter.name) !== -1;\n        });\n      }\n\n      tasks = tasks.filter((task) => {\n        if (filter.status === -1) {\n          return task;\n        } else {\n          return task.status === (filter.status === 1 ? true : false);\n        }\n      });\n    }\n    if (keyword) {\n      tasks = tasks.filter((task) => {\n        return task.name.toLowerCase().indexOf(keyword) !== -1;\n      });\n    }\n\n    if (sortBy === \"name\") {\n      tasks.sort((a, b) => {\n        if (a.name > b.name) return sortValue;\n        else if (a.name < b.name) return -sortValue;\n        else return 0;\n      });\n    } else {\n      tasks.sort((a, b) => {\n        if (a.status > b.status) return -sortValue;\n        else if (a.status < b.status) return sortValue;\n        else return 0;\n      });\n    }\n\n    var elmTaskForm = isDisplayForm ? (\n      <Taskform\n        onSubmit={this.onSubmit}\n        addTask={this.addTask}\n        task={taskEditing}\n      />\n    ) : (\n      \"\"\n    );\n    return (\n      <div>\n        <div className=\"row text-center\">\n          <h1>To Do List</h1>\n        </div>\n        <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12 flex\">\n          <div\n            className={\n              isDisplayForm ? \"col-xs-3 col-sm-3 col-md-3 col-lg-3\" : \"\"\n            }\n          >\n            {elmTaskForm}\n          </div>\n\n          <div\n            className={\n              isDisplayForm\n                ? \"col-xs-6 col-sm-6 col-md-6 col-lg-6\"\n                : \"col-xs-9 col-sm-9 col-md-9 col-lg-9\"\n            }\n          >\n            {/* Add Task */}\n            <div className=\"form-group \">\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={this.addTask}\n              >\n                Add Task\n              </button>\n            </div>\n\n            {/* Search & Sort */}\n            <Control\n              onSearch={this.onSearch}\n              onSort={this.onSort}\n              sortBy={sortBy}\n              sortValue={sortValue}\n            />\n\n            {/* Table Task */}\n            <div className=\"form-group\">\n              <Tasklist\n                tasks={tasks}\n                onUpdateStatus={this.onUpdateStatus}\n                onDelete={this.onDelete}\n                onUpdate={this.onUpdate}\n                onFilter={this.onFilter}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}